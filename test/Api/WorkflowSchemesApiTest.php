<?php
/**
 * WorkflowSchemesApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Jira Cloud platform REST API
 *
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * WorkflowSchemesApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class WorkflowSchemesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createWorkflowScheme
     *
     * Create workflow scheme.
     *
     */
    public function testCreateWorkflowScheme()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDefaultWorkflow
     *
     * Delete default workflow.
     *
     */
    public function testDeleteDefaultWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWorkflowMapping
     *
     * Delete issue types for workflow in workflow scheme.
     *
     */
    public function testDeleteWorkflowMapping()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWorkflowScheme
     *
     * Delete workflow scheme.
     *
     */
    public function testDeleteWorkflowScheme()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWorkflowSchemeIssueType
     *
     * Delete workflow for issue type in workflow scheme.
     *
     */
    public function testDeleteWorkflowSchemeIssueType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllWorkflowSchemes
     *
     * Get all workflow schemes.
     *
     */
    public function testGetAllWorkflowSchemes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDefaultWorkflow
     *
     * Get default workflow.
     *
     */
    public function testGetDefaultWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWorkflow
     *
     * Get issue types for workflows in workflow scheme.
     *
     */
    public function testGetWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWorkflowScheme
     *
     * Get workflow scheme.
     *
     */
    public function testGetWorkflowScheme()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWorkflowSchemeIssueType
     *
     * Get workflow for issue type in workflow scheme.
     *
     */
    public function testGetWorkflowSchemeIssueType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWorkflowSchemeIssueType
     *
     * Set workflow for issue type in workflow scheme.
     *
     */
    public function testSetWorkflowSchemeIssueType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDefaultWorkflow
     *
     * Update default workflow.
     *
     */
    public function testUpdateDefaultWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWorkflowMapping
     *
     * Set issue types for workflow in workflow scheme.
     *
     */
    public function testUpdateWorkflowMapping()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWorkflowScheme
     *
     * Update workflow scheme.
     *
     */
    public function testUpdateWorkflowScheme()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
